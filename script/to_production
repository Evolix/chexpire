#!/bin/bash

# Copyright (C) 2018 Colin Darie <colin@darie.eu>, 2018 Evolix <info@evolix.fr>
# License: GNU AGPL-3+ (see full text in LICENSE file)

set -e
[ -n "$DEBUG" ] && set -x

# git name-rev is fail
CURRENT=$(git rev-parse --abbrev-ref HEAD)
TIMESTAMP=$(date +"%s")

echo "ðŸ‘€ Fetching git repository informationâ€¦"
git fetch origin --quiet

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
CURRENT_HEAD=$(git rev-parse HEAD)
ORIGIN_HEAD=$(git rev-parse origin/master)

if [ "master" != "${CURRENT_BRANCH}" ]; then
  echo "ðŸ˜• Only master can be deployed to production"
  exit 1
fi

if [ "${CURRENT_HEAD}" != "${ORIGIN_HEAD}" ]; then
  echo "ðŸ˜• Local master is not up to date with origin"
  exit 1
fi

read -p "ðŸ‘‰ Deploy master to production ? (y/N) " confirmed

if [ "${confirmed}" != "y" ]; then
  echo "ðŸ˜ž Abort, bye."
  exit 1
fi

echo "ðŸš€ Deploying ${CURRENT_BRANCH} to production !"

# une branche "production" est (re)initialisÃ©e sur le commit courant
git branch -f production
# â€¦ et poussÃ©e sur le mote "origin"
git push --force origin production

# et le dÃ©ploiement a lieu
bundle exec cap production deploy

# crÃ©ation du tag
TAG="prod-${TIMESTAMP}-$(logname)"
git tag ${TAG} && git push origin tag ${TAG}

echo "ðŸ˜Ž Done !"
