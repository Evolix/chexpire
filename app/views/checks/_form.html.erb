<% # Copyright (C) 2018 Colin Darie <colin@darie.eu>, 2018 Evolix <info@evolix.fr> %>
<% # License: GNU AGPL-3+ (see full text in LICENSE file) %>
<%= simple_form_for(check) do |f| %>
  <%= f.input :domain,
        autofocus: true,
        input_html: { autocapitalize: :none, autocorrect: :off },
        label: t(".#{check.kind || "generic" }.domain") %>

  <% if check.new_record? %>
    <%= f.input :kind, as: check.kind.present? ? :hidden : :radio_buttons, collection: Check.kinds.keys %>
  <% end %>

  <%= f.input :comment %>
  <%= f.input :vendor %>

  <% if check.ssl? %>
    <%= f.input :round_robin %>
  <% end %>

  <% if check.persisted? %>
    <%= f.input :active %>
  <% end %>

  <h2 class="mt-5"><%= t(".notifications") %></h2>
  <p class="alert alert-light"><%= t(".notifications_hint") %></p>

  <%- check.notifications.each_with_index do |notification, index| %>
    <div data-notification-id="<%= notification.id %>">
      <%= f.fields_for :notifications, notification do |nf| %>
        <%= render "notifications/nested_form_headers", f: nf if index.zero? %>
        <%= render "notifications/nested_form", f: nf, check: check %>
      <% end %>
    </div>
  <% end %>

  <%= f.button :submit, class: "btn-primary mt-5" %>
<% end %>
